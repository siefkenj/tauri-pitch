name: Build

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["*"]

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
                      args: ""
                    - platform: "windows-latest"
                      args: ""

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v4

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libasound2-dev libpulse-dev
              # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
              # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  cache: "npm" # Set this to npm, yarn or pnpm.

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: "./src-tauri -> target"

            - uses: jetli/wasm-pack-action@v0.4.0
              with:
                  # Optional version of wasm-pack to install(eg. 'v0.9.1', 'latest')
                  version: "latest"

            - name: Install frontend dependencies
              # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
              run: |-
                  npm install
                  npm run build:wasm

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  # tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
                  # releaseName: "App v__VERSION__"
                  releaseBody: "See the assets to download this version and install."
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}
